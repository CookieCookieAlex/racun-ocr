"""initial migration

Revision ID: 8900bcac251d
Revises: 
Create Date: 2025-07-11 12:51:26.163207

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8900bcac251d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('receipt_id', sa.Integer(), nullable=False),
    sa.Column('image_path', sa.String(length=255), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['receipt_id'], ['receipts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_images_id'), 'images', ['id'], unique=False)
    op.add_column('corrections', sa.Column('receipt_id', sa.Integer(), nullable=False))
    op.add_column('corrections', sa.Column('field_name', sa.String(length=100), nullable=False))
    op.add_column('corrections', sa.Column('old_value', sa.Text(), nullable=True))
    op.add_column('corrections', sa.Column('new_value', sa.Text(), nullable=True))
    op.alter_column('corrections', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_corrections_id'), 'corrections', ['id'], unique=False)
    op.drop_constraint(op.f('corrections_user_id_fkey'), 'corrections', type_='foreignkey')
    op.drop_constraint(op.f('corrections_receipt_item_id_fkey'), 'corrections', type_='foreignkey')
    op.create_foreign_key(None, 'corrections', 'receipts', ['receipt_id'], ['id'])
    op.create_foreign_key(None, 'corrections', 'users', ['user_id'], ['id'])
    op.drop_column('corrections', 'receipt_item_id')
    op.drop_column('corrections', 'corrected_quantity')
    op.drop_column('corrections', 'original_name')
    op.drop_column('corrections', 'corrected_unit_price')
    op.drop_column('corrections', 'original_unit_price')
    op.drop_column('corrections', 'correction_reason')
    op.drop_column('corrections', 'corrected_name')
    op.drop_column('corrections', 'corrected_total_price')
    op.drop_column('corrections', 'original_quantity')
    op.drop_column('corrections', 'original_total_price')
    op.alter_column('labels', 'receipt_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('labels', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('labels', 'label',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.create_index(op.f('ix_labels_id'), 'labels', ['id'], unique=False)
    op.drop_constraint(op.f('labels_user_id_fkey'), 'labels', type_='foreignkey')
    op.drop_constraint(op.f('labels_receipt_id_fkey'), 'labels', type_='foreignkey')
    op.create_foreign_key(None, 'labels', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'labels', 'receipts', ['receipt_id'], ['id'])
    op.add_column('receipt_items', sa.Column('name', sa.String(length=255), nullable=False))
    op.add_column('receipt_items', sa.Column('price_per_item', sa.Float(), nullable=False))
    op.alter_column('receipt_items', 'receipt_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('receipt_items', 'quantity',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('receipt_items', 'total_price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               nullable=False)
    op.create_index(op.f('ix_receipt_items_id'), 'receipt_items', ['id'], unique=False)
    op.drop_constraint(op.f('receipt_items_receipt_id_fkey'), 'receipt_items', type_='foreignkey')
    op.create_foreign_key(None, 'receipt_items', 'receipts', ['receipt_id'], ['id'])
    op.drop_column('receipt_items', 'unit_price')
    op.drop_column('receipt_items', 'item_name')
    op.add_column('receipts', sa.Column('unique_key', sa.String(length=255), nullable=False))
    op.add_column('receipts', sa.Column('purchase_date', sa.DateTime(), nullable=True))
    op.add_column('receipts', sa.Column('total_cost', sa.Float(), nullable=False))
    op.alter_column('receipts', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('receipts', 'store_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('receipts_store_id_receipt_key_key'), 'receipts', type_='unique')
    op.create_index(op.f('ix_receipts_id'), 'receipts', ['id'], unique=False)
    op.create_unique_constraint('unique_store_key', 'receipts', ['store_id', 'unique_key'])
    op.drop_constraint(op.f('receipts_user_id_fkey'), 'receipts', type_='foreignkey')
    op.drop_constraint(op.f('receipts_store_id_fkey'), 'receipts', type_='foreignkey')
    op.create_foreign_key(None, 'receipts', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'receipts', 'stores', ['store_id'], ['id'])
    op.drop_column('receipts', 'created_at')
    op.drop_column('receipts', 'total_amount')
    op.drop_column('receipts', 'date_of_purchase')
    op.drop_column('receipts', 'receipt_key')
    op.drop_column('receipts', 'receipt_image')
    op.create_index(op.f('ix_stores_id'), 'stores', ['id'], unique=False)
    op.create_unique_constraint(None, 'stores', ['name'])
    op.drop_column('stores', 'address')
    op.drop_column('stores', 'created_at')
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.alter_column('users', 'hashed_password',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
    op.add_column('stores', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('stores', sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'stores', type_='unique')
    op.drop_index(op.f('ix_stores_id'), table_name='stores')
    op.add_column('receipts', sa.Column('receipt_image', postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.add_column('receipts', sa.Column('receipt_key', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('receipts', sa.Column('date_of_purchase', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('receipts', sa.Column('total_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.add_column('receipts', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'receipts', type_='foreignkey')
    op.drop_constraint(None, 'receipts', type_='foreignkey')
    op.create_foreign_key(op.f('receipts_store_id_fkey'), 'receipts', 'stores', ['store_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(op.f('receipts_user_id_fkey'), 'receipts', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('unique_store_key', 'receipts', type_='unique')
    op.drop_index(op.f('ix_receipts_id'), table_name='receipts')
    op.create_unique_constraint(op.f('receipts_store_id_receipt_key_key'), 'receipts', ['store_id', 'receipt_key'], postgresql_nulls_not_distinct=False)
    op.alter_column('receipts', 'store_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('receipts', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('receipts', 'total_cost')
    op.drop_column('receipts', 'purchase_date')
    op.drop_column('receipts', 'unique_key')
    op.add_column('receipt_items', sa.Column('item_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
    op.add_column('receipt_items', sa.Column('unit_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'receipt_items', type_='foreignkey')
    op.create_foreign_key(op.f('receipt_items_receipt_id_fkey'), 'receipt_items', 'receipts', ['receipt_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_receipt_items_id'), table_name='receipt_items')
    op.alter_column('receipt_items', 'total_price',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               nullable=True)
    op.alter_column('receipt_items', 'quantity',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('receipt_items', 'receipt_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('receipt_items', 'price_per_item')
    op.drop_column('receipt_items', 'name')
    op.drop_constraint(None, 'labels', type_='foreignkey')
    op.drop_constraint(None, 'labels', type_='foreignkey')
    op.create_foreign_key(op.f('labels_receipt_id_fkey'), 'labels', 'receipts', ['receipt_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('labels_user_id_fkey'), 'labels', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_labels_id'), table_name='labels')
    op.alter_column('labels', 'label',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('labels', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('labels', 'receipt_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('corrections', sa.Column('original_total_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.add_column('corrections', sa.Column('original_quantity', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('corrections', sa.Column('corrected_total_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.add_column('corrections', sa.Column('corrected_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
    op.add_column('corrections', sa.Column('correction_reason', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('corrections', sa.Column('original_unit_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.add_column('corrections', sa.Column('corrected_unit_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.add_column('corrections', sa.Column('original_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
    op.add_column('corrections', sa.Column('corrected_quantity', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('corrections', sa.Column('receipt_item_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'corrections', type_='foreignkey')
    op.drop_constraint(None, 'corrections', type_='foreignkey')
    op.create_foreign_key(op.f('corrections_receipt_item_id_fkey'), 'corrections', 'receipt_items', ['receipt_item_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('corrections_user_id_fkey'), 'corrections', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_corrections_id'), table_name='corrections')
    op.alter_column('corrections', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('corrections', 'new_value')
    op.drop_column('corrections', 'old_value')
    op.drop_column('corrections', 'field_name')
    op.drop_column('corrections', 'receipt_id')
    op.drop_index(op.f('ix_images_id'), table_name='images')
    op.drop_table('images')
    # ### end Alembic commands ###
